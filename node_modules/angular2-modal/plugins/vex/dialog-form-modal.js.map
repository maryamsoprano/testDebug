{"version":3,"file":"dialog-form-modal.js","sourceRoot":"","sources":["dialog-form-modal.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAUO,eAAe,CAAC,CAAA;AAEvB,+BAAgC,uCAAuC,CAAC,CAAA;AAExE,uBAAmD,qBAAqB,CAAC,CAAA;AACzE,2BAA0B,yBAAyB,CAAC,CAAA;AAsBpD;;GAEG;AAWH;IAAA;QAOE;;;WAGG;QACc,kBAAa,GAAG,IAAI,mBAAY,EAAuB,CAAC;IAM3E,CAAC;IAJC,kCAAO,GAAP,UAAQ,GAAQ,EAAE,MAAkB;QAClC,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,KAAA,GAAG,EAAE,QAAA,MAAM,EAAC,CAAC,CAAC;IACzC,CAAC;IAXD;QAAC,YAAK,EAAE;;qDAAA;IAMR;QAAC,aAAM,EAAE;;2DAAA;IArBX;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,0NAKL;SACN,CAAC;;wBAAA;IAkBF,uBAAC;AAAD,CAAC,AAjBD,IAiBC;AAjBY,wBAAgB,mBAiB5B,CAAA;AAED;;;GAGG;AAUH;IAIE,yBAAmB,MAA+B,EAC9B,cAAkC,EAClC,GAA6B;QAF9B,WAAM,GAAN,MAAM,CAAyB;QAC9B,mBAAc,GAAd,cAAc,CAAoB;QAClC,QAAG,GAAH,GAAG,CAA0B;QAC/C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAChC,CAAC;IAED,yCAAe,GAAf;QAAA,iBAcC;QAbC;;;;;WAKG;QACH,UAAU,CAAE;YACR,KAAI,CAAC,MAAM,CAAC,UAAU,GAAG,gCAAe,CACtC,KAAI,CAAC,GAAG,EACR,KAAI,CAAC,OAAO,CAAC,OAAO,EACpB,KAAI,CAAC,cAAc,EACnB,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAa,GAAb,UAAc,MAA2B;QACvC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IA1BD;QAAC,gBAAS,CAAC,aAAa,EAAE,EAAC,IAAI,EAAE,uBAAgB,EAAC,CAAC;;2DAAA;IAXrD;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,kPAIJ;SACP,CAAC;;uBAAA;IA8BF,sBAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,uBAAe,kBA6B3B,CAAA;AAeD;IAGE,oBAAmB,MAA+B;QAA/B,WAAM,GAAN,MAAM,CAAyB;QAChD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAChC,CAAC;IAlBH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,oaAQD;SACV,CAAC;;kBAAA;IAOF,iBAAC;AAAD,CAAC,AAND,IAMC;AANY,kBAAU,aAMtB,CAAA","sourcesContent":["import {\n  Component,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { createComponent } from '../../../../components/angular2-modal';\n\nimport { ModalComponent, ModalCompileConfig } from '../../models/tokens';\nimport { DialogRef } from '../../models/dialog-ref';\nimport { DialogPreset } from './presets/dialog-preset';\nimport { DropInPreset } from './presets/dropin-preset';\n\nexport interface VEXButtonHandler {\n  (cmp: ModalComponent<DialogPreset>, $event: MouseEvent): void;\n}\n\n/**\n * Interface for button definition\n */\nexport interface VEXButtonConfig {\n  cssClass: string;\n  caption: string;\n  onClick: VEXButtonHandler;\n}\n\nexport interface VEXButtonClickEvent {\n  btn: VEXButtonConfig;\n  $event: MouseEvent;\n}\n\n/**\n * A Dialog is a\n */\n@Component({\n  selector: 'vex-dialog-buttons',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vex-dialog-buttons\">\n    <button type=\"button\" \n         *ngFor=\"let btn of buttons;\"\n         [class]=\"btn.cssClass\"\n         (click)=\"onClick(btn, $event)\">{{btn.caption}}</button>\n</div>`\n})\nexport class VEXDialogButtons {\n\n  /**\n   * A collection of button configurations, each configuration is a button to display.\n   */\n  @Input() public buttons: VEXButtonConfig[];\n\n  /**\n   * Emitted when a button was clicked\n   * @type {EventEmitter<VEXButtonClickEvent>}\n   */\n  @Output() public onButtonClick = new EventEmitter<VEXButtonClickEvent>();\n\n  onClick(btn: any, $event: MouseEvent) {\n    $event.stopPropagation();\n    this.onButtonClick.emit({btn, $event});\n  }\n}\n\n/**\n * A Dialog with customized buttons wrapped in a form.\n *\n */\n@Component({\n  selector: 'modal-dialog',\n  encapsulation: ViewEncapsulation.None,\n  template: `<form class=\"vex-dialog-form\">\n    <div style=\"display: none\" #modalDialog></div> \n    <vex-dialog-buttons [buttons]=\"context.buttons\"\n                        (onButtonClick)=\"onButtonClick($event)\"></vex-dialog-buttons>\n</form>`\n})\nexport class DialogFormModal implements AfterViewInit, ModalComponent<DialogPreset> {\n  private context: DialogPreset;\n  @ViewChild('modalDialog', {read: ViewContainerRef}) private _viewContainer: ViewContainerRef;\n\n  constructor(public dialog: DialogRef<DialogPreset>,\n              private _compileConfig: ModalCompileConfig,\n              private _cr: ComponentFactoryResolver) {\n    this.context = dialog.context;\n  }\n\n  ngAfterViewInit() {\n    /*  TODO:\n     In RC5 dynamic component creation is no longer async.\n     Somewhere down the pipe of the created component a value change happens that fires\n     a CD exception. setTimeout is a workaround that mimics the async behavior.\n     Find out the error and remove setTimeout.\n     */\n    setTimeout( () => {\n        this.dialog.contentRef = createComponent(\n          this._cr,\n          this.context.content,\n          this._viewContainer,\n          this._compileConfig.bindings);\n    });\n  }\n\n  onButtonClick($event: VEXButtonClickEvent) {\n    $event.btn.onClick(this, $event.$event);\n  }\n}\n\n@Component({\n  selector: 'drop-in-dialog',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vex-dialog-message\">{{context.message}}</div>\n    <div *ngIf=\"context.showInput\" class=\"vex-dialog-input\">\n        <input autofocus #input\n               name=\"vex\" \n               type=\"text\" \n               class=\"vex-dialog-prompt-input\"\n               (change)=\"context.defaultResult = input.value\"               \n               placeholder=\"{{context.placeholder}}\">\n    </div>`\n})\nexport class FormDropIn implements ModalComponent<DropInPreset> {\n  private context: DropInPreset;\n\n  constructor(public dialog: DialogRef<DropInPreset>) {\n    this.context = dialog.context;\n  }\n}\n"]}