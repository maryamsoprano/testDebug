{"version":3,"file":"modal-content.js","sourceRoot":"","sources":["modal-content.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAQO,eAAe,CAAC,CAAA;AAEvB,+BAAgC,uCAAuC,CAAC,CAAA;AAExE,sBAAsB,SAAS,CAAC,CAAA;AAChC,uBAAmC,qBAAqB,CAAC,CAAA;AACzD,2BAA0B,yBAAyB,CAAC,CAAA;AAGpD;;GAEG;AAYH;IAKE,yBAAmB,MAAkC,EACjC,MAAa,EACb,cAAkC,EAClC,GAA6B;QAH9B,WAAM,GAAN,MAAM,CAA4B;QACjC,WAAM,GAAN,MAAM,CAAO;QACb,mBAAc,GAAd,cAAc,CAAoB;QAClC,QAAG,GAAH,GAAG,CAA0B;QAC/C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAChC,CAAC;IAED,yCAAe,GAAf;QAAA,iBAkBC;QAjBC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC1C,CAAC;QAED;;;;;WAKG;QACH,UAAU,CAAE;YACV,KAAI,CAAC,MAAM,CAAC,UAAU,GAAG,gCAAe,CACtC,KAAI,CAAC,GAAG,EACR,KAAI,CAAC,cAAc,CAAC,SAAS,EAC7B,KAAI,CAAC,cAAc,EACnB,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAc,GAAd;QACE,kDAAkD;QAClD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YACxE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAlCD;QAAC,gBAAS,CAAC,cAAc,CAAC;;yDAAA;IAC1B;QAAC,gBAAS,CAAC,aAAa,EAAE,EAAC,IAAI,EAAE,uBAAgB,EAAC,CAAC;;2DAAA;IAdrD;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,QAAQ,EAAE,gVAML;YACL,aAAa,EAAE,wBAAiB,CAAC,IAAI;SACtC,CAAC;;uBAAA;IAsCF,sBAAC;AAAD,CAAC,AArCD,IAqCC;AArCY,uBAAe,kBAqC3B,CAAA","sourcesContent":["import {\n  Component,\n  ComponentFactoryResolver,\n  ElementRef,\n  ViewContainerRef,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit\n} from '@angular/core';\n\nimport { createComponent } from '../../../../components/angular2-modal';\n\nimport { Modal } from './modal';\nimport { ModalCompileConfig } from '../../models/tokens';\nimport { DialogRef } from '../../models/dialog-ref';\nimport { VEXModalContext } from './modal-context';\n\n/**\n * A component that acts as a top level container for an open modal window.\n */\n@Component({\n  selector: 'modal-content',\n  template: `<div tabindex=\"-1\" role=\"dialog\"\n      [class]=\"context.contentClassName\" (clickOutside)=\"onClickOutside()\" #dlgContainer>\n    <div style=\"display: none\" #modalDialog></div>    \n    <div *ngIf=\"context.showCloseButton\" \n         [class]=\"context.closeClassName\" \n         (click)=\"dialog.dismiss()\"></div>\n</div>`,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class VexModalContent implements AfterViewInit {\n  private context: VEXModalContext;\n  @ViewChild('dlgContainer') private dlgContainer: ElementRef;\n  @ViewChild('modalDialog', {read: ViewContainerRef}) private _viewContainer: ViewContainerRef;\n\n  constructor(public dialog: DialogRef<VEXModalContext>,\n              private _modal: Modal,\n              private _compileConfig: ModalCompileConfig,\n              private _cr: ComponentFactoryResolver) {\n    this.context = dialog.context;\n  }\n\n  ngAfterViewInit() {\n    if (this.dlgContainer.nativeElement) {\n      this.dlgContainer.nativeElement.focus();\n    }\n\n    /*  TODO:\n     In RC5 dynamic component creation is no longer async.\n     Somewhere down the pipe of the created component a value change happens that fires\n     a CD exception. setTimeout is a workaround that mimics the async behavior.\n     Find out the error and remove setTimeout.\n     */\n    setTimeout( () => {\n      this.dialog.contentRef = createComponent(\n        this._cr,\n        this._compileConfig.component,\n        this._viewContainer,\n        this._compileConfig.bindings);\n    });\n  }\n\n  onClickOutside() {\n    // check that this modal is the last in the stack.\n    if (this._modal.isTopMost(this.dialog) && !this.dialog.context.isBlocking)\n      this.dialog.dismiss();\n  }\n}\n"]}